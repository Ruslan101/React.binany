{"ast":null,"code":"import _classCallCheck from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}), document.getElementById('root')); //serviceWorker.unregister(); Хз для чего этот метод :D\n\nvar Hello =\n/*#__PURE__*/\nfunction (_React$component) {\n  _inherits(Hello, _React$component);\n\n  function Hello() {\n    _classCallCheck(this, Hello);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Hello).apply(this, arguments));\n  }\n\n  _createClass(Hello, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Hello\");\n    }\n  }]);\n\n  return Hello;\n}(React.component);\n\nexport default Hi;\nReactDOM.render(React.createElement(Hi, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), document.querySelector(\"#root\"));\n/*function time()\n{\n\tconst element = (\n\t\t<div>\n\t\t\t<h1>Welcome to my site</h1>\n\t\t\t<h2>Time is { new Date().toLocaleTimeString() }</h2>\n\t\t</div>\n\t);\n\tReactDOM.render \n\t(\n\t\telement,\n\t\tdocument.querySelector(\"#root\")\n\t);\n}\nsetInterval(time, 100);\n\nfunction hello (props) { return <h1>Hello, {props.name}</h1>; }\n// Это энгземпляр компонента котрый принемает атрибут (какого то тега) и возврощяет обьект\n\nconst elem = <hello name='Alex' />;*/","map":{"version":3,"sources":["C:\\my_files\\projects\\React\\projects\\new-app\\src\\index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","Hello","component","Hi","querySelector"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAF,QAAQ,CAACG,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;;IACMC,K;;;;;;;;;;;;;6BACK;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;;;EAHiBP,KAAK,CAACQ,S;;AAK1B,eAAeC,EAAf;AAECR,QAAQ,CAACG,MAAT,CACC,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EAECC,QAAQ,CAACK,aAAT,CAAuB,OAAvB,CAFD;AAKD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n//serviceWorker.unregister(); Хз для чего этот метод :D\nclass Hello extends React.component {\n  render() {\n    return <h1>Hello</h1>;\n  }\n}\nexport default Hi;\n\n ReactDOM.render (\n \t<Hi />,\n \tdocument.querySelector(\"#root\")\n );\n\n/*function time()\n{\n\tconst element = (\n\t\t<div>\n\t\t\t<h1>Welcome to my site</h1>\n\t\t\t<h2>Time is { new Date().toLocaleTimeString() }</h2>\n\t\t</div>\n\t);\n\tReactDOM.render \n\t(\n\t\telement,\n\t\tdocument.querySelector(\"#root\")\n\t);\n}\nsetInterval(time, 100);\n\nfunction hello (props) { return <h1>Hello, {props.name}</h1>; }\n// Это энгземпляр компонента котрый принемает атрибут (какого то тега) и возврощяет обьект\n\nconst elem = <hello name='Alex' />;*/\n"]},"metadata":{},"sourceType":"module"}