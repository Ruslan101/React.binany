{"ast":null,"code":"import _classCallCheck from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; ////// Функциональные и классовые компоненты //////\n\nvar WelcomCl =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WelcomCl, _React$Component);\n\n  function WelcomCl() {\n    _classCallCheck(this, WelcomCl);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WelcomCl).apply(this, arguments));\n  }\n\n  _createClass(WelcomCl, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, \"Hello \", this.props.name);\n    }\n  }]);\n\n  return WelcomCl;\n}(React.Component);\n\nfunction Main() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(WelcomCl, {\n    name: \"root\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Welcom, {\n    name: \"world\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), Element[0], Element[1]);\n}\n\nfunction Welcom(props) // Тагже своиства можно передовать напрямую (без ключевого слова props) ({name})\n{\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Hello \", props.name);\n} ////// Отрисовка компонентов //////\n\n\nvar Element = new Array();\nElement[0] = React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"Hello world\"); // Простой React елемент\n\nElement[1] = React.createElement(Welcom, {\n  name: \"root\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}); // Елемент являющийся прототипом компонента Welcom\n\nReactDOM.render(React.createElement(Main, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), document.querySelector(\"#root\")); ////// Состояния //////\n\nvar TimerCl =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TimerCl, _React$Component2);\n\n  function TimerCl(props) {\n    var _this;\n\n    _classCallCheck(this, TimerCl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TimerCl).call(this, props));\n    _this.state = {\n      value: 0\n    }; // Установка начального значения состояния\n\n    return _this;\n  }\n\n  _createClass(TimerCl, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.timerID = setInterval(function () {\n        return _this2.setState({\n          value: _this2.state.value + 1\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n    /*\r\n    componentDidMount() - Вызывается при (первом рендеринге) прототипа компонента\r\n    componentWillUnmount() - Вызывается при удалении компонента из DOM\r\n    С помощью метода setInterval цеклически изменяется значения состояния\r\n    При каждом изменение состояни с помощью метода setState компонент будет рендерится заного\r\n    Если изменять значения состояния без метода setState то компонент не будет рендерится заного\r\n    this.state.value = something... Так писать нельзя\r\n    this.state = { value: something... }  Так тоже нельзя\r\n    this.setState ( { value: something } ) Так можно\r\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Time is: \", this.state.value));\n    }\n  }]);\n\n  return TimerCl;\n}(React.Component);\n\nReactDOM.render(React.createElement(TimerCl, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}), document.getElementById('timer2')); ////// Таймер на основе функций (без использования состояний) //////\n\nvar time = 500;\n\nfunction Timer() {\n  if (time == 1) clearInterval(a);\n  time--;\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Time is: \", time);\n}\n\nvar a = setInterval(abc, 1000);\n\nfunction abc() {\n  ReactDOM.render(React.createElement(Timer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), document.querySelector(\"#timer\"));\n} ////// События //////\n\n\nfunction Button() {\n  function Clickbut() {\n    console.log(\"Кнопка нажата\");\n  }\n\n  return React.createElement(\"p\", {\n    onClick: Clickbut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Click me\");\n} // При нажатий на кнопку будет вызыватся функция Clickbut\n\n\nReactDOM.render(React.createElement(Button, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}), document.querySelector(\"#but\"));\n\nvar ButtonCl =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(ButtonCl, _React$Component3);\n\n  function ButtonCl() {\n    _classCallCheck(this, ButtonCl);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ButtonCl).apply(this, arguments));\n  }\n\n  _createClass(ButtonCl, [{\n    key: \"ClickbutCl\",\n    value: function ClickbutCl() {\n      console.log(\"Кноака нажата\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"p\", {\n        onClick: this.ClickbutCl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Click me\");\n    }\n  }]);\n\n  return ButtonCl;\n}(React.Component);\n\nReactDOM.render(React.createElement(ButtonCl, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}), document.querySelector(\"#but2\")); // Чтобы отменить действие по умолчанию (например следования по ссылке) нужено в обработчике использовать preventDefault\n\nfunction Reloadbut() {\n  function rel(e) {\n    e.preventDefault();\n    document.location.reload(true);\n  }\n\n  return React.createElement(\"a\", {\n    href: \"#\",\n    onClick: rel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Click to reload\");\n}\n\nReactDOM.render(React.createElement(Reloadbut, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}), document.querySelector(\"#rel\"));\n/*class RGB extends React.Component\r\n{\r\n\trender ()\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Ring />\r\n\t\t\t\t<Ring />\r\n\t\t\t\t<Ring />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}*/\n\nvar Rgb =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(Rgb, _React$Component4);\n\n  function Rgb(props) {\n    var _this3;\n\n    _classCallCheck(this, Rgb);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Rgb).call(this, props));\n    _this3.style = {\n      color: _this3.state.color\n    };\n    _this3.state = {\n      color: \"red\"\n    };\n    return _this3;\n  }\n\n  _createClass(Rgb, [{\n    key: \"Cklicker\",\n    value: function Cklicker() {\n      if (this.state.color == \"red\") this.setState({\n        color: \"green\"\n      });\n      if (this.state.color == \"green\") this.setState({\n        color: \"blue\"\n      });\n      if (this.state.color == \"blue\") this.setState({\n        color: \"red\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"p\", {\n        onClick: this.Cklicker,\n        style: this.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"RGB\");\n    }\n  }]);\n\n  return Rgb;\n}(React.Component);\n\nReactDOM.render(React.createElement(Rgb, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n}), document.querySelector(\"#color\")); ////// Списки и ключи //////","map":{"version":3,"sources":["C:\\my_files\\projects\\React\\projects\\new-app\\src\\index.js"],"names":["React","ReactDOM","WelcomCl","props","name","Component","Main","Element","Welcom","Array","render","document","querySelector","TimerCl","state","value","timerID","setInterval","setState","clearInterval","getElementById","time","Timer","a","abc","Button","Clickbut","console","log","ButtonCl","ClickbutCl","Reloadbut","rel","e","preventDefault","location","reload","Rgb","style","color","Cklicker"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n////// Функциональные и классовые компоненты //////\r\n\r\nclass WelcomCl extends React.Component\r\n{\r\n\trender () { return (<p>Hello {this.props.name}</p>); }\r\n}\r\nfunction Main ()\r\n{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<WelcomCl name=\"root\" />\r\n\t\t\t<Welcom name=\"world\" />\r\n\t\t\t{Element[0]}\r\n\t\t\t{Element[1]}\r\n\t\t</div>\r\n\t);\r\n}\r\nfunction Welcom (props) // Тагже своиства можно передовать напрямую (без ключевого слова props) ({name})\r\n{\r\n\treturn (<p>Hello {props.name}</p>);\r\n}\r\n\r\n////// Отрисовка компонентов //////\r\n\r\nvar Element = new Array();\r\n\r\nElement[0] = <p>Hello world</p>; // Простой React елемент\r\n\r\nElement[1] = <Welcom name=\"root\" />; // Елемент являющийся прототипом компонента Welcom\r\n\r\nReactDOM.render(<Main />, document.querySelector(\"#root\"));\r\n\r\n////// Состояния //////\r\nclass TimerCl extends React.Component\r\n{\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: 0}; // Установка начального значения состояния\r\n    }\r\n    componentDidMount() { this.timerID = setInterval(() => this.setState({value: this.state.value + 1}), 1000); }\r\n    componentWillUnmount() { clearInterval(this.timerID); }\r\n    /*\r\n\t\tcomponentDidMount() - Вызывается при (первом рендеринге) прототипа компонента\r\n\t\tcomponentWillUnmount() - Вызывается при удалении компонента из DOM\r\n\r\n\t\tС помощью метода setInterval цеклически изменяется значения состояния\r\n\t\tПри каждом изменение состояни с помощью метода setState компонент будет рендерится заного\r\n\t\tЕсли изменять значения состояния без метода setState то компонент не будет рендерится заного\r\n\r\n\t\tthis.state.value = something... Так писать нельзя\r\n\t\tthis.state = { value: something... }  Так тоже нельзя\r\n\t\tthis.setState ( { value: something } ) Так можно\r\n    */\r\n    render() {\r\n      return (\r\n        <div>\r\n          <p>Time is: { this.state.value }</p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\nReactDOM.render(<TimerCl/>, document.getElementById('timer2'));\r\n\r\n////// Таймер на основе функций (без использования состояний) //////\r\nvar time = 500;\r\n\r\nfunction Timer ()\r\n{\r\n\tif (time == 1) clearInterval(a);\r\n\ttime--;\r\n\treturn (<p>Time is: {time}</p>);\r\n}\r\nvar a = setInterval(abc, 1000);\r\n\r\nfunction abc() { ReactDOM.render(<Timer />, document.querySelector(\"#timer\")); }\r\n\r\n////// События //////\r\n\r\nfunction Button () \r\n{ \r\n\tfunction Clickbut() { console.log(\"Кнопка нажата\"); }\r\n\treturn <p onClick={Clickbut}>Click me</p> \r\n} // При нажатий на кнопку будет вызыватся функция Clickbut\r\n\r\nReactDOM.render(<Button />, document.querySelector(\"#but\"));\r\n\r\nclass ButtonCl extends React.Component\r\n{\r\n\tClickbutCl () { console.log(\"Кноака нажата\"); }\r\n\trender ()\r\n\t{\r\n\t\treturn ( <p onClick={ this.ClickbutCl }>Click me</p> )\r\n\t}\r\n}\r\nReactDOM.render(<ButtonCl />, document.querySelector(\"#but2\"));\r\n\r\n// Чтобы отменить действие по умолчанию (например следования по ссылке) нужено в обработчике использовать preventDefault\r\n\r\nfunction Reloadbut ()\r\n{\r\n\tfunction rel (e)\r\n\t{\r\n\t\te.preventDefault();\r\n\t\tdocument.location.reload(true);\r\n\t}\r\n\treturn <a href=\"#\" onClick={rel}>Click to reload</a>\r\n}\r\nReactDOM.render(<Reloadbut />, document.querySelector(\"#rel\"));\r\n\r\n/*class RGB extends React.Component\r\n{\r\n\trender ()\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Ring />\r\n\t\t\t\t<Ring />\r\n\t\t\t\t<Ring />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}*/\r\nclass Rgb extends React.Component\r\n{\r\n\tconstructor (props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = { color: \"red\" };\r\n\t}\r\n\tstyle = { color: this.state.color };\r\n\tCklicker () \r\n\t{  \r\n\t\tif (this.state.color == \"red\") this.setState({ color: \"green\" });\r\n\t\tif (this.state.color == \"green\") this.setState({ color: \"blue\" });\r\n\t\tif (this.state.color == \"blue\") this.setState({ color: \"red\" });\r\n\t}\r\n\trender () {\r\n\t\treturn (<p onClick={this.Cklicker} style={this.style}>RGB</p>);\r\n\t}\r\n}\r\nReactDOM.render(<Rgb />, document.querySelector(\"#color\"));\r\n\r\n////// Списки и ключи //////\r\n\r\n"]},"metadata":{},"sourceType":"module"}