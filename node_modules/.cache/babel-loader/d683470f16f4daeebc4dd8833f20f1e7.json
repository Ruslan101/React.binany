{"ast":null,"code":"import _classCallCheck from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\n\nfunction Names(_ref) {\n  var name = _ref.name;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, \"Hello \", name);\n} // name это своиство\n// const Names ({name}) =>       <div>Hello {name}</div>; // Так тоже можно писать компоненты\n// При создании обьекта (тега) типа Names своиство нужно будет передавать так: <Names name=\"root\" /> \n\n\nvar Container =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Container, _React$Component);\n\n  function Container() {\n    _classCallCheck(this, Container);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Container).apply(this, arguments));\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \" My component \"));\n    }\n  }]);\n\n  return Container;\n}(React.Component);\n\nfunction Hello() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" Hello world \"), Getname(), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), Names(John));\n}\n\nfunction Getname() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" Hello \", prompt(\"Print name\", \"root\"), \" \"));\n}\n\nrender(React.createElement(Hello, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), document.getElementById(\"root\"));\n/* class Status extends React.Component \r\n{\r\n\tconstructor (props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = { st: true };\r\n\t}\r\n\thandleClick()\r\n\t{\r\n\t\tif (this.state.st) this.setState({ st: false });\r\n\t\telse this.setState({ st: true });\r\n\t}\r\n\trender ()\r\n\t{\r\n\t\tconst stat = this.state.st ? true : false;\r\n\t\treturn ( <div><p className=\"statebut\" onClick={this.handleClick.bind(this)}> State is {stat}</p></div>);\r\n\t}\r\n} */","map":{"version":3,"sources":["C:\\my_files\\projects\\React\\projects\\new-app\\src\\index.js"],"names":["React","render","Names","name","Container","Component","Hello","Getname","John","prompt","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,SAASC,KAAT,OAAwB;AAAA,MAAPC,IAAO,QAAPA,IAAO;AAAE,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAYA,IAAZ,CAAP;AAAiC,C,CAAC;AAE5D;AACA;;;IAMMC,S;;;;;;;;;;;;;6BAGL;AACC,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,CADD;AAKA;;;;EATsBJ,KAAK,CAACK,S;;AAW9B,SAASC,KAAT,GACA;AACC,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEGC,OAAO,EAFV,EAGC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAIGL,KAAK,CAACM,IAAD,CAJR,CADD;AAQA;;AACD,SAASD,OAAT,GACA;AACC,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWE,MAAM,CAAC,YAAD,EAAe,MAAf,CAAjB,MADD,CADD;AAKA;;AAEDR,MAAM,CAAC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAYS,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAZ,CAAN;AAIA","sourcesContent":["import React from 'react'\r\nimport {render} from 'react-dom'\r\nimport './index.css';\r\n\r\nfunction Names ({name}) { return <div>Hello {name}</div>; } // name это своиство\r\n\r\n// const Names ({name}) =>       <div>Hello {name}</div>; // Так тоже можно писать компоненты\r\n// При создании обьекта (тега) типа Names своиство нужно будет передавать так: <Names name=\"root\" /> \r\n\r\n\r\n\r\n\r\n\r\nclass Container extends React.Component \r\n{\r\n\trender ()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p> My component </p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nfunction Hello ()\r\n{\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p> Hello world </p>\r\n\t\t\t{ Getname() }\r\n\t\t\t<Container />\r\n\t\t\t{ Names(John) }\r\n\t\t</div>\r\n\t)\r\n}\r\nfunction Getname ()\r\n{\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p> Hello {prompt(\"Print name\", \"root\")} </p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nrender(<Hello />, document.getElementById(\"root\"));\r\n\r\n\r\n\r\n/* class Status extends React.Component \r\n{\r\n\tconstructor (props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = { st: true };\r\n\t}\r\n\thandleClick()\r\n\t{\r\n\t\tif (this.state.st) this.setState({ st: false });\r\n\t\telse this.setState({ st: true });\r\n\t}\r\n\trender ()\r\n\t{\r\n\t\tconst stat = this.state.st ? true : false;\r\n\t\treturn ( <div><p className=\"statebut\" onClick={this.handleClick.bind(this)}> State is {stat}</p></div>);\r\n\t}\r\n} */"]},"metadata":{},"sourceType":"module"}