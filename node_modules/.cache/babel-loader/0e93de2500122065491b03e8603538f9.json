{"ast":null,"code":"var _jsxFileName = \"C:\\\\my_files\\\\projects\\\\React\\\\projects\\\\new-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Hello from './App'; // Импортируем класс из другого файла\n\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}), document.getElementById('root')); //serviceWorker.unregister(); Хз для чего этот метод :D\n\n/*ReactDOM.render (\n\t<h1>My first project on react</h1>,\n\tdocument.querySelector(\"#root\")\n);*/\n\n{\n  /*Метод вставляет в DOM то что мы передодим как первый аргумент в узел который будет вторым аргументом*/\n}\n\nfunction time() {\n  var element = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Welcome to my site\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Time is \", new Date().toLocaleTimeString()));\n  ReactDOM.render(element, document.querySelector(\"#root\"));\n}\n\nsetInterval(time, 100);\n\nfunction hello(props) {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Hello, \", props.name);\n} // Это энгземпляр компонента котрый принемает атрибут (какого то тега) и возврощяет обьект\n\n\nvar elem = React.createElement(\"hello\", {\n  name: \"Alex\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n});","map":{"version":3,"sources":["C:\\my_files\\projects\\React\\projects\\new-app\\src\\index.js"],"names":["React","ReactDOM","App","Hello","serviceWorker","render","document","getElementById","time","element","Date","toLocaleTimeString","querySelector","setInterval","hello","props","name","elem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAH,QAAQ,CAACI,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;;AAEC;;;;;AAKD;AAAE;AAA0G;;AAE5G,SAASC,IAAT,GACA;AACC,MAAMC,OAAO,GACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAc,IAAIC,IAAJ,GAAWC,kBAAX,EAAd,CAFD,CADD;AAMAV,EAAAA,QAAQ,CAACI,MAAT,CAECI,OAFD,EAGCH,QAAQ,CAACM,aAAT,CAAuB,OAAvB,CAHD;AAKA;;AACDC,WAAW,CAACL,IAAD,EAAO,GAAP,CAAX;;AAEA,SAASM,KAAT,CAAgBC,KAAhB,EAAuB;AAAE,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYA,KAAK,CAACC,IAAlB,CAAP;AAAsC,C,CAC/D;;;AAEA,IAAMC,IAAI,GAAG;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAb","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Hello from './App'; // Импортируем класс из другого файла\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n//serviceWorker.unregister(); Хз для чего этот метод :D\n\n /*ReactDOM.render (\n \t<h1>My first project on react</h1>,\n \tdocument.querySelector(\"#root\")\n );*/\n\n{ /*Метод вставляет в DOM то что мы передодим как первый аргумент в узел который будет вторым аргументом*/ }\n\nfunction time()\n{\n\tconst element = (\n\t\t<div>\n\t\t\t<h1>Welcome to my site</h1>\n\t\t\t<h2>Time is { new Date().toLocaleTimeString() }</h2>\n\t\t</div>\n\t);\n\tReactDOM.render \n\t(\n\t\telement,\n\t\tdocument.querySelector(\"#root\")\n\t);\n}\nsetInterval(time, 100);\n\nfunction hello (props) { return <h1>Hello, {props.name}</h1>; }\n// Это энгземпляр компонента котрый принемает атрибут (какого то тега) и возврощяет обьект\n\nconst elem = <hello name='Alex' />;\n"]},"metadata":{},"sourceType":"module"}